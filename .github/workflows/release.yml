name: Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release Type'
        default: 'feature'
        required: false
        type: choice
        options:
          - 'major'
          - 'feature'
          - 'patch'
      publish:
        description: 'Publish on Workshop'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      workshop-id:
        description: 'Workshop Identifier'
        required: false
        default: '3371719217'
        type: string

jobs:
  release:
    name: "Create GitHub Release"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.increment-version.outputs.next-version }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Checkout Tags
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch --prune --unshallow --tags

      - name: Get Version
        id: project
        run: |
          echo "last-version=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

      - name: Increment Version
        id: increment-version
        uses: christian-draeger/increment-semantic-version@1.2.1
        with:
          current-version: ${{ steps.project.outputs.last-version }}
          version-fragment: ${{ inputs.release-type }}

      - name: Collect Changes
        id: commits
        run: |
          {
            echo 'markdown<<EOF'
            echo "$(git log ${{ steps.project.outputs.last-version }}..HEAD --no-merges --pretty=format:' - %s')"
            echo EOF
          } >> "$GITHUB_OUTPUT"
          echo "# Commits" >> $GITHUB_STEP_SUMMARY
          echo "$(git log ${{ steps.project.outputs.last-version }}..HEAD --no-merges --pretty=format:' - %s')" >> $GITHUB_STEP_SUMMARY

      - name: Update Version
        run: |
          sed -i 's/"version" : "${{ steps.project.outputs.last-version }}"/"version" : "${{ steps.increment-version.outputs.next-version }}"/g' mod/.metadata/metadata.json
          git commit -am "Updated version to ${{ steps.increment-version.outputs.next-version }}"
          echo "# Versions" >> $GITHUB_STEP_SUMMARY
          echo "Last Version: **${{ steps.project.outputs.last-version }}**" >> $GITHUB_STEP_SUMMARY
          echo "Next Version: **${{ steps.increment-version.outputs.next-version }}**" >> $GITHUB_STEP_SUMMARY

      - name: Generate Localizations
        shell: bash
        run: |
          (cd script; ./generate-localization.sh english ../mod/)
          git commit -am "Updated localizations" || echo "No Localization changes"

      - name: Push Version and Localizations
        run: |
          git push origin

      - name: Create Release Artifact
        run: |
          (cd mod; zip -r release-${{ steps.increment-version.outputs.next-version }}.zip .)

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Release
          path: mod/release-${{ steps.increment-version.outputs.next-version }}.zip

      - name: Publish GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2.2.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          files: mod/release-${{ steps.increment-version.outputs.next-version }}.zip
          tag_name: ${{ steps.increment-version.outputs.next-version }}
          name: ${{ steps.increment-version.outputs.next-version }}
          body: |
            Released a new version of the **Gacha!** mod.

            ### Commits:
            ${{ steps.commits.outputs.markdown }}

  publish:
    if: ${{ inputs.publish == 'true' }}
    name: "Publish to Workshop"
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: "${{ needs.release.outputs.version }}"

      - name: Create Workshop Metadata
        id: metadata
        shell: bash
        run: |
          (cd script; ./create-release-vdf.sh mod documentation/STEAM_PAGE.bbcode "${{ inputs.workshop-id }}")
          echo "vdf=$(realpath workshop.vdf)" >> "$GITHUB_OUTPUT"
          echo "# Workflow Metadata" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "$(cat < workshop.vdf)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Setup SteamCMD
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Publish to Workshop
        shell: bash
        run: |
          steamcmd +login ${{ secrets.WORKSHOP_USERNAME }} ${{ secrets.WORKSHOP_PASSWORD }} +workshop_build_item ${{ steps.metadata.outputs.vdf }} +quit